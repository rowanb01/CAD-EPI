#Goal is to read in selected variables and form counts based off of them
library(data.table)
library(openxlsx)
PhecodesA <- fread("/sc/arion/projects/igh/data/phecodeTable_BioMe_withSexPhecode_MinCount1.tsv")
dim(PhecodesA)
PhecodesB <- fread("/sc/arion/projects/igh/data/phecodeTable_BioMe_withSexPhecode_MinCount2.tsv")
dim(PhecodesB)
colnames(PhecodesA)
colnames(PhecodesB)
#PhecodesA is from primary icd and PhecodesB is from secondary icd
All_Participants <- fread("/sc/private/regen/IPM-general/Kenny_Lab/MSM/bgen/MSM_TOPMED_allchr_KING")
All_Participants <- fread("/sc/private/regen/IPM-general/Kenny_Lab/MSM/bgen/MSM_TOPMED_allchr_KING.fam")
#Discard All_Participants code attempts (2 lines above)
Social_History <- fread("/sc/private/regen/data/BioMe/BRSSPD/2024-07-01/Social_History.csv")
Social_History <- fread("/sc/private/regen/data/BioMe/BRSSPD/2024-07-01/Social_History.csv", sep= "|")
dim(Social_History)
colnames(Social_History)
#Second time definitely worked
Questionnaire <- fread("/sc/private/regen/data/BioMe/BRSSPD/2024-07-01/Questionnaire.csv", sep="|")
dim(Questionnaire)
Medications <- fread("/sc/private/regen/data/BioMe/BRSSPD/2024-07-01/Medications.csv", sep="|")
dim(Medications)
nrow(unique(Medications$subject_id))
length(unique(Medications$subject_id))
#Still larger than most but this is a more reasonable size in sample
length(unique(Questionnaire$subject_id))
length(unique(Social_History$subject_id))
#Have to pull out variables of interest first and then match based on different variables. Have to use length command instead of nrow for pulling out number of participants
#There is a disconnect between the number of participants with phecodes (as well as genetic info) from number of unique ids within survey data and ehr pulled data
head(PhecodesA$id , 5)
head(Medications$subject_id , 5)
#That won't work for matching
head(Medications$masked_mrn, 5)
Potential_Linker_File <- fread("/sc/private/regen/IPM-general/Kenny_Lab/MSM_QC_v2/msm_with_biome_mmrns/PCA_data_annotated_with_Masked_MRNs_no_duplicates.eigenvec")
dim(Potential_Linker_File)
#The issue is this too low a sample size with 47,000 participants instead of the full set that we need
Potential_Linker_File <- fread("/sc/arion/projects/igh/data/MSM/id_maps/subject_sample_mmrn_map_032025.txt")
dim(Potential_Linker_File)
objects()
Genetic_Samples <- fread("/sc/arion/projects/igh/data/MSM/data/common_variants/combined/batch_001/imputed_TOPMED/bgen/MSM_TOPMED.chr19.sample")
dim(Genetic_Samples)
#Will try to match with Phecodes just to make sure they have all of the samples
Match_PhecodesA_Genetics <- Genetic_Samples[match(intersect(PhecodesA$id, Genetic_Samples$ID_1), Genetic_Samples$ID_1),]
dim(Match_PhecodesA_Genetics)
#This is problematic, since half of the samples are not matching at all
Match_PhecodesA_Genetics <- Genetic_Samples[match(intersect(PhecodesA$id, Genetic_Samples$ID_2), Genetic_Samples$ID_2),]
dim(Match_PhecodesA_Genetics)
#same issue as before
length(unique(PhecodesA$id))
#Somehow the data is not matching, but for now we will let this slide, since genetic data should be all the the phecode data anyways
rm(Match_PhecodesA_Genetics)
Match_PhecodesB_Genetics <- Genetic_Samples[match(intersect(PhecodesB$id, Genetic_Samples$ID_1), Genetic_Samples$ID_1),]
length(unique(PhecodesB$id))
dim(Match_PhecodesB_Genetics)
#Still has the same issue as before
rm(Match_PhecodesB_Genetics)
dim(Potential_Linker_File[match(intersect(PhecodesA$id, Potential_Linker_File$sample_name), Potential_Linker_File$sample_name),])
#We have an issue where the samples are not lineing up with the sample names from the Phecodes. There are consistent drops even with the mapper file, which is problematic. We need to explore this further prior to finishing things for the phenotype counts
head(rownames(PhecodesA), 5)
objects()
dim(Genetic_Samples[match(intersect(Potential_Linker_File$sample_name, Genetic_Samples$ID_1), Genetic_Samples$ID_1),])
dim(Genetic_Samples)
#This slight drop is to be expected. This means we can move forward with the data and pulling out variables. We will need to revist with Abhi about phecode issues, since that is not lining up properly with the current genetic data.
Kept_Genetic_Samples <- Genetic_Samples[match(intersect(Potential_Linker_File$sample_name, Genetic_Samples$ID_1), Genetic_Samples$ID_1),]
dim(Kept_Genetic_Samples)
Kept_Sample_Matching_Algorithm <- Potential_Linker_File[match(intersect(Kept_Genetic_Samples$ID_1, Potential_Linker_File$sample_name), Potential_Linker_File$sample_name),]
dim(Kept_Sample_Matching_Algorithm)
head(Kept_Genetic_Samples, 5)
head(Kept_Genetic_Samples$ID_1, 5)
head(Kept_Sample_Matching_Algorithm$sample_name, 5)
#These match like they are suppossed to
Genetic_with_Linker_File <- cbind(Kept_Genetic_Samples, Kept_Sample_Matching_Algorithm)
dim(Genetic_with_Linker_File)
colnames(Genetic_with_Linker_File)
#Now we have samples that can be pulled from other datasets based on ids
Age_Pull <- Questionnaire$YEAR_OF_BIRTH
rm(Age_Pull)
summary(as.factor(Questionnaire$YEAR_OF_BIRTH))
#No missingness, which is nice
range(Questionnaire$YEAR_OF_BIRTH)
summary(as.factor(Questionnaire$GENDER))
dim(Questionnaire)
Subsampled_Questionnaire <- Questionnaire[match(intersect(Genetic_with_Linker_File$subject_id, Questionnaire$subject_id), Questionnaire$subject_id),]
dim(Subsampled_Questionnaire)
#This pulled it further down but retained majority of the samples
nrow(Genetic_with_Linker_File) - nrow(Subsampled_Questionnaire)
#720 samples lost but this is fine
summary(as.factor(Subsampled_Questionnaire$YEAR_OF_BIRTH))
range(Subsampled_Questionnaire$YEAR_OF_BIRTH)
summary(as.factor(Subsampled_Questionnaire$GENDER))
summary(as.factor(Subsampled_Questionnaire$PERS_HX_HIGH_CHOLESTEROL))
#Not going to use that variable but it was worht a try. Too mcuh other info included than necessary
summary(as.factor(Subsampled_Questionnaire$FAM_HX_HIGH_CHOLESTEROL))
#can also save these to a worksheet just to show the results have been pulled
summary(as.factor(Subsampled_Questionnaire$FAM_HX_HIGH_BLOOD_PRESSURE))
summary(as.factor(Subsampled_Questionnaire$FAM_HX_DIABETES))
summary(as.factor(Subsampled_Questionnaire$FAM_HX_DEPRESSION))
summary(as.factor(Subsampled_Questionnaire$FAM_HX_SCHIZOPHRENIA))
summary(as.factor(Subsampled_Questionnaire$FAM_HX_KIDNEY_DISEASE))
#Will write those up in a table to show for meeting
objects()
Questionnaire_Extractions <- list("Age" = summary(as.factor(Subsampled_Questionnaire$YEAR_OF_BIRTH)), "Sex" = summary(as.factor(Subsampled_Questionnaire$GENDER)), summary(as.factor(Subsampled_Questionnaire$PERS_HX_HIGH_CHOLESTEROL)), "High Cholesterol" = summary(as.factor(Subsampled_Questionnaire$FAM_HX_HIGH_CHOLESTEROL)), "Hypertension" = summary(as.factor(Subsampled_Questionnaire$FAM_HX_HIGH_BLOOD_PRESSURE)), "Diabetes" = summary(as.factor(Subsampled_Questionnaire$FAM_HX_DIABETES)), "Depression" = summary(as.factor(Subsampled_Questionnaire$FAM_HX_DEPRESSION)), "Schizophrenia" = summary(as.factor(Subsampled_Questionnaire$FAM_HX_SCHIZOPHRENIA)), "Kidney Disease" = summary(as.factor(Subsampled_Questionnaire$FAM_HX_KIDNEY_DISEASE)))
write.xlsx(Questionnaire_Extractions, "Questionnaire_Extractions_042825.xlsx")
#Glad to have checked things, because this is a failure to read out as output
table(summary(as.factor(Subsampled_Questionnaire$FAM_HX_KIDNEY_DISEASE))))
table(summary(as.factor(Subsampled_Questionnaire$FAM_HX_KIDNEY_DISEASE)))
objects()
dim(Social_History)
colnames(Medications)
dim(Medications)
EDU_YRs <- Social_History$YEARS_EDUCATION
SMOKER <- Social_History$TOBACCO_USER
SMOKERB <- Social_History$CIGARETTES_YN
Alcohol_Use <- Social_History$IS_ALCOHOL_USER
IV_DRUG_USER <- Social_History$IV_DRUG_USER_YN
summary(as.factor(EDU_YRs))
#For social history to extract would have to generate a social history pull based on matched partipants and see if there is a date of entry, whihc is not the case. Could get more info from Sarah, but these variables have a huge amount of missiness
dim(Medications)
summary(Medications$ORDER_CLASS)
#This would be a lot, but it means we can separate the list by medication class
savehistory("Raw_Attempt_Generating_First_Pulls_Data_Extraction_Data_Dictionary_042528.Rhistory")
